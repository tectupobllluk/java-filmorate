DROP TABLE IF EXISTS
    mpa,
    users,
    films,
    genres,
    film_genre,
    friends,
    likes;

CREATE TABLE mpa (
    mpa_id INTEGER PRIMARY KEY,
    mpa_name VARCHAR NOT NULL
);

CREATE TABLE users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR NOT NULL UNIQUE,
    login VARCHAR NOT NULL UNIQUE,
    name VARCHAR,
    birthday DATE NOT NULL
);

CREATE TABLE films (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date DATE NOT NULL,
    duration INTEGER NOT NULL,
    mpa_id INTEGER NOT NULL,
    CONSTRAINT fk_film_mpa FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id)
);

CREATE TABLE genres (
    genre_id INTEGER PRIMARY KEY,
    genre_name VARCHAR NOT NULL
);

CREATE TABLE film_genre (
    film_id INTEGER NOT NULL,
    genre_id INTEGER NOT NULL,
    PRIMARY KEY (film_id, genre_id),
    CONSTRAINT fk_genre_films FOREIGN KEY (film_id)
    REFERENCES films (film_id) ON DELETE CASCADE,
    CONSTRAINT fk_film_genres FOREIGN KEY (genre_id)
    REFERENCES genres (genre_id) ON DELETE CASCADE
);

CREATE TABLE friends (
    user_id INTEGER NOT NULL,
    friend_id INTEGER NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    CONSTRAINT fk_user FOREIGN KEY (user_id)
    REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_friend FOREIGN KEY (friend_id)
    REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE likes (
    film_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    PRIMARY KEY (film_id, user_id),
    CONSTRAINT fk_film_like FOREIGN KEY (film_id)
    REFERENCES films (film_id) ON DELETE CASCADE,
    CONSTRAINT fk_user_like FOREIGN KEY (user_id)
    REFERENCES users (user_id) ON DELETE CASCADE
);